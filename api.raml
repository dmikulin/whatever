#%RAML 0.8
title: hybris Products Details API
version: v2
mediaType: application/json
baseUri: https://api.beta.yaas.io/hybris/productdetails/v2
schemas:
  - YRN: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "YRN attribute",
          "type": "string",
          "format": "URI",
          "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
      }
  - Product: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Product",
          "type": "object",
          "properties": {
              "metadata": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                      "mixins": {
                          "type": "object",
                          "additionalProperties": {
                              "type": "string",
                              "format": "uri"
                          }
                      }
                  }
              },
              "id": {
                  "type": "string",
                  "description": "Unique identifier"
              },
              "code": {
                  "type": "string",
                  "description": "Unique, mandatory user-defined identifier of a product.",
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
              },
              "name": {
                  "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                  "description": "The name of the product."
              },
              "description": {
                  "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                  "description": "The description of the product."
              },
              "published": {
                  "type": "boolean",
                  "default": false,
                  "description": "This flag determines if product is live."
              },
              "media": {
                  "type": "array",
                  "items": {
                      "type": "object",
                      "description": "Media file metadata",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "yrn": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "YRN attribute",
                              "type": "string",
                              "format": "URI",
                              "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                          },
                          "mediaId": {
                              "type": "string"
                          },
                          "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL of file content",
                              "required": true
                          },
                          "tags": {
                              "type": "array",
                              "items": {
                                  "type": "string"
                              },
                              "description": "Media file tags"
                          },
                          "contentType": {
                              "type": "string",
                              "description": "MIME type of the media file"
                          },
                          "stored": {
                              "type": "boolean",
                              "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                          },
                          "createdAt": {
                              "type": "string",
                              "description": "Date of media metadata creation."
                          },
                          "customAttributes": {
                              "type": "object",
                              "additionalProperties": true,
                              "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
                          }
                      },
                      "additionalProperties": false
                  },
                  "description": "Contains media information (including url). This attribute is Read-Only."
              },
              "customAttributes": {
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "key": {
                              "type": "string",
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9]*$"
                          },
                          "value": {
                              "type": "string"
                          }
                      },
                      "additionalProperties": false,
                      "required": [
                          "key",
                          "value"
                      ]
                  }
              },
              "mixins": {
                  "type": "object"
              }
          },
          "additionalProperties": false,
          "required": [
              "name"
          ]
      }
  - ProductDetails: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Product Details",
          "type": "object",
          "properties": {
              "product": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "Product",
                  "type": "object",
                  "properties": {
                      "metadata": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                              "mixins": {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "string",
                                      "format": "uri"
                                  }
                              }
                          }
                      },
                      "id": {
                          "type": "string",
                          "description": "Unique identifier"
                      },
                      "code": {
                          "type": "string",
                          "description": "Unique, mandatory user-defined identifier of a product.",
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                      },
                      "name": {
                          "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                          "description": "The name of the product."
                      },
                      "description": {
                          "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                          "description": "The description of the product."
                      },
                      "published": {
                          "type": "boolean",
                          "default": false,
                          "description": "This flag determines if product is live."
                      },
                      "media": {
                          "type": "array",
                          "items": {
                              "type": "object",
                              "description": "Media file metadata",
                              "properties": {
                                  "id": {
                                      "type": "string"
                                  },
                                  "yrn": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "YRN attribute",
                                      "type": "string",
                                      "format": "URI",
                                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                  },
                                  "mediaId": {
                                      "type": "string"
                                  },
                                  "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "URL of file content",
                                      "required": true
                                  },
                                  "tags": {
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      },
                                      "description": "Media file tags"
                                  },
                                  "contentType": {
                                      "type": "string",
                                      "description": "MIME type of the media file"
                                  },
                                  "stored": {
                                      "type": "boolean",
                                      "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                  },
                                  "createdAt": {
                                      "type": "string",
                                      "description": "Date of media metadata creation."
                                  },
                                  "customAttributes": {
                                      "type": "object",
                                      "additionalProperties": true,
                                      "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
                                  }
                              },
                              "additionalProperties": false
                          },
                          "description": "Contains media information (including url). This attribute is Read-Only."
                      },
                      "customAttributes": {
                          "type": "array",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "object",
                              "properties": {
                                  "key": {
                                      "type": "string",
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z0-9]*$"
                                  },
                                  "value": {
                                      "type": "string"
                                  }
                              },
                              "additionalProperties": false,
                              "required": [
                                  "key",
                                  "value"
                              ]
                          }
                      },
                      "mixins": {
                          "type": "object"
                      }
                  },
                  "additionalProperties": false,
                  "required": [
                      "name"
                  ]
              },
              "prices": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema",
                      "title": "Price",
                      "type": "object",
                      "properties": {
                          "priceId": {
                              "description": "The price identifier.",
                              "type": "string"
                          },
                          "effectiveAmount": {
                              "description": "The effective amount that must be taken into consideration for calculation purposes.",
                              "type": "number",
                              "minimum": 0
                          },
                          "originalAmount": {
                              "description": "The original price value for a given product. If salePrice is informed, it will be applied over this amount.",
                              "type": "number",
                              "minimum": 0
                          },
                          "currency": {
                              "description": "The currency code following the ISO 4217 standard.",
                              "type": "string",
                              "pattern": "[A-Z]{3}"
                          },
                          "measurementUnit": {
                              "description": "The measurement unit allows you to specify unit pricing information for a given measure or dimension.",
                              "type": "object",
                              "$ref": "MeasurementUnit"
                          },
                          "dateRange": {
                              "description": "The date range allows you to define pricing for a specific period of time.",
                              "type": "object",
                              "$ref": "DateRange"
                          },
                          "salePrice": {
                              "description": "The promotional price for a product. (value or % amount off)",
                              "type": "object",
                              "$ref": "SalePrice"
                          },
                          "customAttributes": {
                              "type": "object",
                              "patternProperties": {
                                  ".{1,}": {
                                      "type": "string"
                                  }
                              }
                          },
                          "wholesale": {
                              "description": "The wholesale price for a given quantity range.",
                              "type": "object",
                              "$ref": "Wholesale"
                          }
                      },
                      "required": [
                          "effectiveAmount",
                          "originalAmount",
                          "currency"
                      ]
                  }
              }
          }
      }
  - ProductDetailsArray: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "title": "Product Details",
              "type": "object",
              "properties": {
                  "product": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "Product",
                      "type": "object",
                      "properties": {
                          "metadata": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                  "mixins": {
                                      "type": "object",
                                      "additionalProperties": {
                                          "type": "string",
                                          "format": "uri"
                                      }
                                  }
                              }
                          },
                          "id": {
                              "type": "string",
                              "description": "Unique identifier"
                          },
                          "code": {
                              "type": "string",
                              "description": "Unique, mandatory user-defined identifier of a product.",
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                          },
                          "name": {
                              "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                              "description": "The name of the product."
                          },
                          "description": {
                              "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                              "description": "The description of the product."
                          },
                          "published": {
                              "type": "boolean",
                              "default": false,
                              "description": "This flag determines if product is live."
                          },
                          "media": {
                              "type": "array",
                              "items": {
                                  "type": "object",
                                  "description": "Media file metadata",
                                  "properties": {
                                      "id": {
                                          "type": "string"
                                      },
                                      "yrn": {
                                          "$ref": "YRN"
                                      },
                                      "mediaId": {
                                          "type": "string"
                                      },
                                      "url": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "URL of file content",
                                          "required": true
                                      },
                                      "tags": {
                                          "type": "array",
                                          "items": {
                                              "type": "string"
                                          },
                                          "description": "Media file tags"
                                      },
                                      "contentType": {
                                          "type": "string",
                                          "description": "MIME type of the media file"
                                      },
                                      "stored": {
                                          "type": "boolean",
                                          "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                      },
                                      "createdAt": {
                                          "type": "string",
                                          "description": "Date of media metadata creation."
                                      },
                                      "customAttributes": {
                                          "type": "object",
                                          "additionalProperties": true,
                                          "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
                                      }
                                  },
                                  "additionalProperties": false
                              },
                              "description": "Contains media information (including url). This attribute is Read-Only."
                          },
                          "customAttributes": {
                              "type": "array",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "type": "object",
                                  "properties": {
                                      "key": {
                                          "type": "string",
                                          "minLength": 1,
                                          "pattern": "^[a-zA-Z0-9]*$"
                                      },
                                      "value": {
                                          "type": "string"
                                      }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                      "key",
                                      "value"
                                  ]
                              }
                          },
                          "mixins": {
                              "type": "object"
                          }
                      },
                      "additionalProperties": false,
                      "required": [
                          "name"
                      ]
                  },
                  "prices": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "array",
                      "items": {
                          "$ref": "Price"
                      }
                  }
              }
          }
      }
  - ProductDetailsWithCategories: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Product Details",
          "type": "object",
          "properties": {
              "product": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "Product",
                  "type": "object",
                  "properties": {
                      "metadata": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                              "mixins": {
                                  "type": "object",
                                  "additionalProperties": {
                                      "type": "string",
                                      "format": "uri"
                                  }
                              }
                          }
                      },
                      "id": {
                          "type": "string",
                          "description": "Unique identifier"
                      },
                      "code": {
                          "type": "string",
                          "description": "Unique, mandatory user-defined identifier of a product.",
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                      },
                      "name": {
                          "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                          "description": "The name of the product."
                      },
                      "description": {
                          "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                          "description": "The description of the product."
                      },
                      "published": {
                          "type": "boolean",
                          "default": false,
                          "description": "This flag determines if product is live."
                      },
                      "media": {
                          "type": "array",
                          "items": {
                              "type": "object",
                              "description": "Media file metadata",
                              "properties": {
                                  "id": {
                                      "type": "string"
                                  },
                                  "yrn": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "YRN attribute",
                                      "type": "string",
                                      "format": "URI",
                                      "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                  },
                                  "mediaId": {
                                      "type": "string"
                                  },
                                  "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "URL of file content",
                                      "required": true
                                  },
                                  "tags": {
                                      "type": "array",
                                      "items": {
                                          "type": "string"
                                      },
                                      "description": "Media file tags"
                                  },
                                  "contentType": {
                                      "type": "string",
                                      "description": "MIME type of the media file"
                                  },
                                  "stored": {
                                      "type": "boolean",
                                      "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                  },
                                  "createdAt": {
                                      "type": "string",
                                      "description": "Date of media metadata creation."
                                  },
                                  "customAttributes": {
                                      "type": "object",
                                      "additionalProperties": true,
                                      "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
                                  }
                              },
                              "additionalProperties": false
                          },
                          "description": "Contains media information (including url). This attribute is Read-Only."
                      },
                      "customAttributes": {
                          "type": "array",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "object",
                              "properties": {
                                  "key": {
                                      "type": "string",
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z0-9]*$"
                                  },
                                  "value": {
                                      "type": "string"
                                  }
                              },
                              "additionalProperties": false,
                              "required": [
                                  "key",
                                  "value"
                              ]
                          }
                      },
                      "mixins": {
                          "type": "object"
                      }
                  },
                  "additionalProperties": false,
                  "required": [
                      "name"
                  ]
              },
              "prices": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema",
                      "title": "Price",
                      "type": "object",
                      "properties": {
                          "priceId": {
                              "description": "The price identifier.",
                              "type": "string"
                          },
                          "effectiveAmount": {
                              "description": "The effective amount that must be taken into consideration for calculation purposes.",
                              "type": "number",
                              "minimum": 0
                          },
                          "originalAmount": {
                              "description": "The original price value for a given product. If salePrice is informed, it will be applied over this amount.",
                              "type": "number",
                              "minimum": 0
                          },
                          "currency": {
                              "description": "The currency code following the ISO 4217 standard.",
                              "type": "string",
                              "pattern": "[A-Z]{3}"
                          },
                          "measurementUnit": {
                              "description": "The measurement unit allows you to specify unit pricing information for a given measure or dimension.",
                              "type": "object",
                              "$ref": "MeasurementUnit"
                          },
                          "dateRange": {
                              "description": "The date range allows you to define pricing for a specific period of time.",
                              "type": "object",
                              "$ref": "DateRange"
                          },
                          "salePrice": {
                              "description": "The promotional price for a product. (value or % amount off)",
                              "type": "object",
                              "$ref": "SalePrice"
                          },
                          "customAttributes": {
                              "type": "object",
                              "patternProperties": {
                                  ".{1,}": {
                                      "type": "string"
                                  }
                              }
                          },
                          "wholesale": {
                              "description": "The wholesale price for a given quantity range.",
                              "type": "object",
                              "$ref": "Wholesale"
                          }
                      },
                      "required": [
                          "effectiveAmount",
                          "originalAmount",
                          "currency"
                      ]
                  }
              },
              "categories": {
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema",
                      "title": "Category",
                      "type": "object",
                      "properties": {
                          "id": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          }
                      }
                  }
              }
          }
      }
  - PricesArray: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "$schema": "http://json-schema.org/draft-04/schema",
              "title": "Price",
              "type": "object",
              "properties": {
                  "priceId": {
                      "description": "The price identifier.",
                      "type": "string"
                  },
                  "effectiveAmount": {
                      "description": "The effective amount that must be taken into consideration for calculation purposes.",
                      "type": "number",
                      "minimum": 0
                  },
                  "originalAmount": {
                      "description": "The original price value for a given product. If salePrice is informed, it will be applied over this amount.",
                      "type": "number",
                      "minimum": 0
                  },
                  "currency": {
                      "description": "The currency code following the ISO 4217 standard.",
                      "type": "string",
                      "pattern": "[A-Z]{3}"
                  },
                  "measurementUnit": {
                      "description": "The measurement unit allows you to specify unit pricing information for a given measure or dimension.",
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema",
                      "properties": {
                          "quantity": {
                              "description": "The unit pricing base measure attribute specifies your preference of the denominator.",
                              "type": "number",
                              "minimum": 0
                          },
                          "unitCode": {
                              "description": "The unit of measurement",
                              "enum": [
                                  "kg",
                                  "g",
                                  "mg",
                                  "l",
                                  "ml",
                                  "lb",
                                  "qt",
                                  "qtr",
                                  "gal",
                                  "pt",
                                  "oz"
                              ]
                          }
                      },
                      "required": [
                          "quantity",
                          "unitCode"
                      ]
                  },
                  "dateRange": {
                      "description": "The date range allows you to define pricing for a specific period of time.",
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema",
                      "properties": {
                          "startDate": {
                              "description": "The start date following ISO 8601 format.",
                              "type": "string",
                              "format": "date-time"
                          },
                          "endDate": {
                              "description": "The end date following ISO 8601 format.",
                              "type": "string",
                              "format": "date-time"
                          }
                      },
                      "required": [
                          "startDate",
                          "endDate"
                      ]
                  },
                  "salePrice": {
                      "description": "The promotional price for a product. (value or % amount off)",
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema",
                      "properties": {
                          "startDate": {
                              "description": "The start date following ISO 8601 format.",
                              "type": "string",
                              "format": "date-time"
                          },
                          "endDate": {
                              "description": "The end date following ISO 8601 format.",
                              "type": "string",
                              "format": "date-time"
                          }
                      },
                      "required": [
                          "startDate",
                          "endDate"
                      ]
                  },
                  "customAttributes": {
                      "type": "object",
                      "patternProperties": {
                          ".{1,}": {
                              "type": "string"
                          }
                      }
                  },
                  "wholesale": {
                      "description": "The wholesale price for a given quantity range.",
                      "type": "object",
                      "$schema": "http://json-schema.org/draft-04/schema",
                      "properties": {
                          "minQuantity": {
                              "description": "The minimum quantity range that this price applies to.",
                              "type": "number",
                              "minimum": 1
                          },
                          "maxQuantity": {
                              "description": "The maximum quantity range that this price applies to.",
                              "type": "number",
                              "minimum": 2
                          }
                      },
                      "required": [
                          "minQuantity"
                      ]
                  }
              },
              "required": [
                  "effectiveAmount",
                  "originalAmount",
                  "currency"
              ]
          }
      }
  - Price: |
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "Price",
          "type": "object",
          "properties": {
              "priceId": {
                  "description": "The price identifier.",
                  "type": "string"
              },
              "effectiveAmount": {
                  "description": "The effective amount that must be taken into consideration for calculation purposes.",
                  "type": "number",
                  "minimum": 0
              },
              "originalAmount": {
                  "description": "The original price value for a given product. If salePrice is informed, it will be applied over this amount.",
                  "type": "number",
                  "minimum": 0
              },
              "currency": {
                  "description": "The currency code following the ISO 4217 standard.",
                  "type": "string",
                  "pattern": "[A-Z]{3}"
              },
              "measurementUnit": {
                  "description": "The measurement unit allows you to specify unit pricing information for a given measure or dimension.",
                  "type": "object",
                  "$schema": "http://json-schema.org/draft-04/schema",
                  "properties": {
                      "quantity": {
                          "description": "The unit pricing base measure attribute specifies your preference of the denominator.",
                          "type": "number",
                          "minimum": 0
                      },
                      "unitCode": {
                          "description": "The unit of measurement",
                          "enum": [
                              "kg",
                              "g",
                              "mg",
                              "l",
                              "ml",
                              "lb",
                              "qt",
                              "qtr",
                              "gal",
                              "pt",
                              "oz"
                          ]
                      }
                  },
                  "required": [
                      "quantity",
                      "unitCode"
                  ]
              },
              "dateRange": {
                  "description": "The date range allows you to define pricing for a specific period of time.",
                  "type": "object",
                  "$schema": "http://json-schema.org/draft-04/schema",
                  "properties": {
                      "startDate": {
                          "description": "The start date following ISO 8601 format.",
                          "type": "string",
                          "format": "date-time"
                      },
                      "endDate": {
                          "description": "The end date following ISO 8601 format.",
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  "required": [
                      "startDate",
                      "endDate"
                  ]
              },
              "salePrice": {
                  "description": "The promotional price for a product. (value or % amount off)",
                  "type": "object",
                  "$schema": "http://json-schema.org/draft-04/schema",
                  "properties": {
                      "startDate": {
                          "description": "The start date following ISO 8601 format.",
                          "type": "string",
                          "format": "date-time"
                      },
                      "endDate": {
                          "description": "The end date following ISO 8601 format.",
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  "required": [
                      "startDate",
                      "endDate"
                  ]
              },
              "customAttributes": {
                  "type": "object",
                  "patternProperties": {
                      ".{1,}": {
                          "type": "string"
                      }
                  }
              },
              "wholesale": {
                  "description": "The wholesale price for a given quantity range.",
                  "type": "object",
                  "$schema": "http://json-schema.org/draft-04/schema",
                  "properties": {
                      "minQuantity": {
                          "description": "The minimum quantity range that this price applies to.",
                          "type": "number",
                          "minimum": 1
                      },
                      "maxQuantity": {
                          "description": "The maximum quantity range that this price applies to.",
                          "type": "number",
                          "minimum": 2
                      }
                  },
                  "required": [
                      "minQuantity"
                  ]
              }
          },
          "required": [
              "effectiveAmount",
              "originalAmount",
              "currency"
          ]
      }
  - Wholesale: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "properties": {
              "minQuantity": {
                  "description": "The minimum quantity range that this price applies to.",
                  "type": "number",
                  "minimum": 1
              },
              "maxQuantity": {
                  "description": "The maximum quantity range that this price applies to.",
                  "type": "number",
                  "minimum": 2
              }
          },
          "required": [
              "minQuantity"
          ]
      }
  - SalePrice: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "properties": {
              "startDate": {
                  "description": "The start date following ISO 8601 format.",
                  "type": "string",
                  "format": "date-time"
              },
              "endDate": {
                  "description": "The end date following ISO 8601 format.",
                  "type": "string",
                  "format": "date-time"
              }
          },
          "required": [
              "startDate",
              "endDate"
          ]
      }
  - DateRange: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "properties": {
              "startDate": {
                  "description": "The start date following ISO 8601 format.",
                  "type": "string",
                  "format": "date-time"
              },
              "endDate": {
                  "description": "The end date following ISO 8601 format.",
                  "type": "string",
                  "format": "date-time"
              }
          },
          "required": [
              "startDate",
              "endDate"
          ]
      }
  - MeasurementUnit: |
      {
          "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "properties": {
              "quantity": {
                  "description": "The unit pricing base measure attribute specifies your preference of the denominator.",
                  "type": "number",
                  "minimum": 0
              },
              "unitCode": {
                  "description": "The unit of measurement",
                  "enum": [
                      "kg",
                      "g",
                      "mg",
                      "l",
                      "ml",
                      "lb",
                      "qt",
                      "qtr",
                      "gal",
                      "pt",
                      "oz"
                  ]
              }
          },
          "required": [
              "quantity",
              "unitCode"
          ]
      }
  - MediaMetadata: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "description": "Media file metadata",
          "properties": {
              "id": {
                  "type": "string"
              },
              "yrn": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "YRN attribute",
                  "type": "string",
                  "format": "URI",
                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
              },
              "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL of file content"
              },
              "tags": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  },
                  "description": "Media file tags"
              },
              "contentType": {
                  "type": "string",
                  "description": "MIME type of the media file",
                  "example": "image/jpeg"
              },
              "customAttributes": {
                  "type": "object",
                  "additionalProperties": true,
                  "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
              }
          }
      }
  - Category: |
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "Category",
          "type": "object",
          "properties": {
              "id": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              }
          }
      }
  - QuantitativeValue: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "value": {
                  "type": "number",
                  "required": true,
                  "description": "The value of the product characteristic."
              },
              "unitCode": {
                  "type": "string",
                  "required": false,
                  "description": "The unit of measurement given using the UN/CEFACT Common Code (2-3 characters). If no unitCode is given, it is assumed to be 'Pieces' ('1' in math/physics terms, or also 'each')"
              }
          }
      }
  - ErrorMessage: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "error",
          "description": "Schema for API specified errors.",
          "type": "object",
          "properties": {
              "status": {
                  "type": "integer",
                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                  "minimum": 100,
                  "maximum": 599
              },
              "type": {
                  "type": "string",
                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                  "pattern": "[a-z]+[a-z_]*[a-z]+"
              },
              "message": {
                  "type": "string",
                  "description": "descriptive error message for debugging"
              },
              "moreInfo": {
                  "type": "string",
                  "format": "uri",
                  "description": "link to documentation to investigate further and finding support"
              },
              "details": {
                  "type": "array",
                  "description": "list of problems causing this error",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "errorDetail",
                      "description": "schema for specific error cause",
                      "type": "object",
                      "properties": {
                          "field": {
                              "type": "string",
                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error detail message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support for error detail"
                          }
                      },
                      "required": [
                          "type"
                      ]
                  }
              }
          },
          "required": [
              "status",
              "type"
          ]
      }
traits:
  - oauth2:
      usage: Apply this trait to support OAuth 2.0 authentication.
      description: |
        Supports OAuth 2.0 for authenticating all API requests.

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - paged:
      usage: |
        Apply this trait to a method returning a list of entities which should be paged.
      description: |
        This trait adds query parameters to the request so that the result can be paginated on the server side.
        The specified parameters are page number and page size.

      queryParameters:
        pageNumber:
          type: integer
          description: |
            The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
            The number of the first page is 1.

          minimum: 1
          example: 1
          default: 1
          required: false
        pageSize:
          type: integer
          description: |
            The number of documents being retrieved on the page.

          minimum: 1
          example: 16
          default: 16
          required: false
      responses:
        200:
          description: |
            Request was successful.

          headers:
            Link:
              description: |
                Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
                The link to the current page (**self**) is required and must be provided always.
                The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
                The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

              example: |
                <http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"
              required: true
              repeat: true
              type: string
              displayName: Link
        400:
          description: |
            Request was syntactically incorrect. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "pageNumber",
                            "message": "must be a positive number",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - sortable:
      usage: |
        Apply this to any method that support sorted results.

      queryParameters:
        sort:
          type: string
          description: |
            The list of comma-separated properties used to sort the results.
            By default, the column values are sorted in ascending order. 
            Can either be in the form of fieldName or fieldName:asc,fieldName:desc.
            If you want to sort by localized attributes, you must use the following form:
            fieldName.language or fieldName.language:asc,fieldName.language:desc.

          example: |
            size,species:asc,weight:desc

          required: false
  - queryable:
      usage: |
        Apply this trait to a method returning a list of entities which should be queried.
      description: |
        This trait adds query parameters to the request so that the result can be queried and limited. 

      queryParameters:
        q:
          type: string
          description: |
            The simple query criteria based on available fields to limit returned results or a set of modified documents.

          example: |
            species:dog name:"Clifford"

          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "q",
                            "message": "not a valid query",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - localizedRetrieval:
      usage: Apply this trait when you want to retrieve localized attributes.
      description: |
        This trait provides localization headers for retrieving localized attributes.

      headers:
        Accept-Language:
          type: string
          description: |
            The value of the locale identifier of the language in which the attribute should be returned.
            Provide several values separated by comma, in order to specify fallback languages.

          example: pl
          repeat: true
          required: false
        hybris-languages:
          type: string
          description: |
            Comma separated list of language identifiers for which the localization for an attribute
            should be provided.

          example: en,pl,it
          repeat: true
          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "Accept-Language",
                            "message": "not a language",
                            "type": "invalid_header"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - oauth_2_0:
      usage: Apply this trait to support OAuth 2.0 authentication.
      description: |
        Supports OAuth 2.0 for authenticating all API requests.

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        400:
          description: |
            Request was syntactically incorrect. Any details will be provided within the response payload.

        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate 
            the user. Any details will be provided within the response payload.

/{tenant}/productdetails:
  uriParameters:
    tenant:
      type: string
      required: true
  get:
    is: [ localizedRetrieval, paged, sortable, queryable, oauth2 ]
    description: Get products with default prices.
    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
      Accept-Language:
        type: string
        description: |
          The value of the locale identifier of the language in which the attribute should be returned.
          Provide several values separated by comma, in order to specify fallback languages.

        example: pl
        repeat: true
        required: false
      hybris-languages:
        type: string
        description: |
          Comma separated list of language identifiers for which the localization for an attribute
          should be provided.

        example: en,pl,it
        repeat: true
        required: false
      hybris-currency:
        type: string
        description: |
          currency ISO code for returned price

        example: USD
        required: false
    queryParameters:
      q:
        type: string
        description: |
          The simple query criteria based on available fields to limit returned results or a set of modified documents.

        example: |
          species:dog name:"Clifford"

        required: false
      sort:
        type: string
        description: |
          The list of comma-separated properties used to sort the results.
          By default, the column values are sorted in ascending order. 
          Can either be in the form of fieldName or fieldName:asc,fieldName:desc.
          If you want to sort by localized attributes, you must use the following form:
          fieldName.language or fieldName.language:asc,fieldName.language:desc.

        example: |
          size,species:asc,weight:desc

        required: false
      pageNumber:
        type: integer
        description: |
          The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
          The number of the first page is 1.

        minimum: 1
        example: 1
        default: 1
        required: false
      pageSize:
        type: integer
        description: |
          The number of documents being retrieved on the page.

        minimum: 1
        example: 16
        default: 16
        required: false
      effectiveDate:
        type: string
        description: |
          The date in ISO 8601 format to get only the prices which are effective at the specified date.

        example: 2015-01-23T22:00:00+0000
        required: false
    responses:
      200:
        description: |
          Resource successfully retrieved.

        headers:
          Link:
            description: |
              Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
              The link to the current page (**self**) is required and must be provided always.
              The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
              The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

            example: |
              <http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"
            required: true
            repeat: true
            type: string
            displayName: Link
          hybris-count:
            description: total count of queried elements
            type: integer
            example: 100
            displayName: hybris-count
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "Product Details",
                      "type": "object",
                      "properties": {
                          "product": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "Product",
                              "type": "object",
                              "properties": {
                                  "metadata": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                          "mixins": {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          }
                                      }
                                  },
                                  "id": {
                                      "type": "string",
                                      "description": "Unique identifier"
                                  },
                                  "code": {
                                      "type": "string",
                                      "description": "Unique, mandatory user-defined identifier of a product.",
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                                  },
                                  "name": {
                                      "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                                      "description": "The name of the product."
                                  },
                                  "description": {
                                      "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                                      "description": "The description of the product."
                                  },
                                  "published": {
                                      "type": "boolean",
                                      "default": false,
                                      "description": "This flag determines if product is live."
                                  },
                                  "media": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "description": "Media file metadata",
                                          "properties": {
                                              "id": {
                                                  "type": "string"
                                              },
                                              "yrn": {
                                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                                  "title": "YRN attribute",
                                                  "type": "string",
                                                  "format": "URI",
                                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                              },
                                              "mediaId": {
                                                  "type": "string"
                                              },
                                              "url": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "URL of file content",
                                                  "required": true
                                              },
                                              "tags": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  },
                                                  "description": "Media file tags"
                                              },
                                              "contentType": {
                                                  "type": "string",
                                                  "description": "MIME type of the media file"
                                              },
                                              "stored": {
                                                  "type": "boolean",
                                                  "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                              },
                                              "createdAt": {
                                                  "type": "string",
                                                  "description": "Date of media metadata creation."
                                              },
                                              "customAttributes": {
                                                  "type": "object",
                                                  "additionalProperties": true,
                                                  "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
                                              }
                                          },
                                          "additionalProperties": false
                                      },
                                      "description": "Contains media information (including url). This attribute is Read-Only."
                                  },
                                  "customAttributes": {
                                      "type": "array",
                                      "items": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "type": "object",
                                          "properties": {
                                              "key": {
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "pattern": "^[a-zA-Z0-9]*$"
                                              },
                                              "value": {
                                                  "type": "string"
                                              }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                              "key",
                                              "value"
                                          ]
                                      }
                                  },
                                  "mixins": {
                                      "type": "object"
                                  }
                              },
                              "additionalProperties": false,
                              "required": [
                                  "name"
                              ]
                          },
                          "prices": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "array",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema",
                                  "title": "Price",
                                  "type": "object",
                                  "properties": {
                                      "priceId": {
                                          "description": "The price identifier.",
                                          "type": "string"
                                      },
                                      "effectiveAmount": {
                                          "description": "The effective amount that must be taken into consideration for calculation purposes.",
                                          "type": "number",
                                          "minimum": 0
                                      },
                                      "originalAmount": {
                                          "description": "The original price value for a given product. If salePrice is informed, it will be applied over this amount.",
                                          "type": "number",
                                          "minimum": 0
                                      },
                                      "currency": {
                                          "description": "The currency code following the ISO 4217 standard.",
                                          "type": "string",
                                          "pattern": "[A-Z]{3}"
                                      },
                                      "measurementUnit": {
                                          "description": "The measurement unit allows you to specify unit pricing information for a given measure or dimension.",
                                          "type": "object",
                                          "$schema": "http://json-schema.org/draft-04/schema",
                                          "properties": {
                                              "quantity": {
                                                  "description": "The unit pricing base measure attribute specifies your preference of the denominator.",
                                                  "type": "number",
                                                  "minimum": 0
                                              },
                                              "unitCode": {
                                                  "description": "The unit of measurement",
                                                  "enum": [
                                                      "kg",
                                                      "g",
                                                      "mg",
                                                      "l",
                                                      "ml",
                                                      "lb",
                                                      "qt",
                                                      "qtr",
                                                      "gal",
                                                      "pt",
                                                      "oz"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "quantity",
                                              "unitCode"
                                          ]
                                      },
                                      "dateRange": {
                                          "description": "The date range allows you to define pricing for a specific period of time.",
                                          "type": "object",
                                          "$schema": "http://json-schema.org/draft-04/schema",
                                          "properties": {
                                              "startDate": {
                                                  "description": "The start date following ISO 8601 format.",
                                                  "type": "string",
                                                  "format": "date-time"
                                              },
                                              "endDate": {
                                                  "description": "The end date following ISO 8601 format.",
                                                  "type": "string",
                                                  "format": "date-time"
                                              }
                                          },
                                          "required": [
                                              "startDate",
                                              "endDate"
                                          ]
                                      },
                                      "salePrice": {
                                          "description": "The promotional price for a product. (value or % amount off)",
                                          "type": "object",
                                          "$schema": "http://json-schema.org/draft-04/schema",
                                          "properties": {
                                              "startDate": {
                                                  "description": "The start date following ISO 8601 format.",
                                                  "type": "string",
                                                  "format": "date-time"
                                              },
                                              "endDate": {
                                                  "description": "The end date following ISO 8601 format.",
                                                  "type": "string",
                                                  "format": "date-time"
                                              }
                                          },
                                          "required": [
                                              "startDate",
                                              "endDate"
                                          ]
                                      },
                                      "customAttributes": {
                                          "type": "object",
                                          "patternProperties": {
                                              ".{1,}": {
                                                  "type": "string"
                                              }
                                          }
                                      },
                                      "wholesale": {
                                          "description": "The wholesale price for a given quantity range.",
                                          "type": "object",
                                          "$schema": "http://json-schema.org/draft-04/schema",
                                          "properties": {
                                              "minQuantity": {
                                                  "description": "The minimum quantity range that this price applies to.",
                                                  "type": "number",
                                                  "minimum": 1
                                              },
                                              "maxQuantity": {
                                                  "description": "The maximum quantity range that this price applies to.",
                                                  "type": "number",
                                                  "minimum": 2
                                              }
                                          },
                                          "required": [
                                              "minQuantity"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "effectiveAmount",
                                      "originalAmount",
                                      "currency"
                                  ]
                              }
                          }
                      }
                  }
              }
      203:
        description: |
          If the response is incomplete (e.g. when the price information could not be returned due to overload or technical problems).

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "Product Details",
                      "type": "object",
                      "properties": {
                          "product": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "Product",
                              "type": "object",
                              "properties": {
                                  "metadata": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                          "mixins": {
                                              "type": "object",
                                              "additionalProperties": {
                                                  "type": "string",
                                                  "format": "uri"
                                              }
                                          }
                                      }
                                  },
                                  "id": {
                                      "type": "string",
                                      "description": "Unique identifier"
                                  },
                                  "code": {
                                      "type": "string",
                                      "description": "Unique, mandatory user-defined identifier of a product.",
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                                  },
                                  "name": {
                                      "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                                      "description": "The name of the product."
                                  },
                                  "description": {
                                      "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                                      "description": "The description of the product."
                                  },
                                  "published": {
                                      "type": "boolean",
                                      "default": false,
                                      "description": "This flag determines if product is live."
                                  },
                                  "media": {
                                      "type": "array",
                                      "items": {
                                          "type": "object",
                                          "description": "Media file metadata",
                                          "properties": {
                                              "id": {
                                                  "type": "string"
                                              },
                                              "yrn": {
                                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                                  "title": "YRN attribute",
                                                  "type": "string",
                                                  "format": "URI",
                                                  "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                              },
                                              "mediaId": {
                                                  "type": "string"
                                              },
                                              "url": {
                                                  "type": "string",
                                                  "format": "uri",
                                                  "description": "URL of file content",
                                                  "required": true
                                              },
                                              "tags": {
                                                  "type": "array",
                                                  "items": {
                                                      "type": "string"
                                                  },
                                                  "description": "Media file tags"
                                              },
                                              "contentType": {
                                                  "type": "string",
                                                  "description": "MIME type of the media file"
                                              },
                                              "stored": {
                                                  "type": "boolean",
                                                  "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                              },
                                              "createdAt": {
                                                  "type": "string",
                                                  "description": "Date of media metadata creation."
                                              },
                                              "customAttributes": {
                                                  "type": "object",
                                                  "additionalProperties": true,
                                                  "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
                                              }
                                          },
                                          "additionalProperties": false
                                      },
                                      "description": "Contains media information (including url). This attribute is Read-Only."
                                  },
                                  "customAttributes": {
                                      "type": "array",
                                      "items": {
                                          "$schema": "http://json-schema.org/draft-04/schema#",
                                          "type": "object",
                                          "properties": {
                                              "key": {
                                                  "type": "string",
                                                  "minLength": 1,
                                                  "pattern": "^[a-zA-Z0-9]*$"
                                              },
                                              "value": {
                                                  "type": "string"
                                              }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                              "key",
                                              "value"
                                          ]
                                      }
                                  },
                                  "mixins": {
                                      "type": "object"
                                  }
                              },
                              "additionalProperties": false,
                              "required": [
                                  "name"
                              ]
                          },
                          "prices": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "type": "array",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema",
                                  "title": "Price",
                                  "type": "object",
                                  "properties": {
                                      "priceId": {
                                          "description": "The price identifier.",
                                          "type": "string"
                                      },
                                      "effectiveAmount": {
                                          "description": "The effective amount that must be taken into consideration for calculation purposes.",
                                          "type": "number",
                                          "minimum": 0
                                      },
                                      "originalAmount": {
                                          "description": "The original price value for a given product. If salePrice is informed, it will be applied over this amount.",
                                          "type": "number",
                                          "minimum": 0
                                      },
                                      "currency": {
                                          "description": "The currency code following the ISO 4217 standard.",
                                          "type": "string",
                                          "pattern": "[A-Z]{3}"
                                      },
                                      "measurementUnit": {
                                          "description": "The measurement unit allows you to specify unit pricing information for a given measure or dimension.",
                                          "type": "object",
                                          "$schema": "http://json-schema.org/draft-04/schema",
                                          "properties": {
                                              "quantity": {
                                                  "description": "The unit pricing base measure attribute specifies your preference of the denominator.",
                                                  "type": "number",
                                                  "minimum": 0
                                              },
                                              "unitCode": {
                                                  "description": "The unit of measurement",
                                                  "enum": [
                                                      "kg",
                                                      "g",
                                                      "mg",
                                                      "l",
                                                      "ml",
                                                      "lb",
                                                      "qt",
                                                      "qtr",
                                                      "gal",
                                                      "pt",
                                                      "oz"
                                                  ]
                                              }
                                          },
                                          "required": [
                                              "quantity",
                                              "unitCode"
                                          ]
                                      },
                                      "dateRange": {
                                          "description": "The date range allows you to define pricing for a specific period of time.",
                                          "type": "object",
                                          "$schema": "http://json-schema.org/draft-04/schema",
                                          "properties": {
                                              "startDate": {
                                                  "description": "The start date following ISO 8601 format.",
                                                  "type": "string",
                                                  "format": "date-time"
                                              },
                                              "endDate": {
                                                  "description": "The end date following ISO 8601 format.",
                                                  "type": "string",
                                                  "format": "date-time"
                                              }
                                          },
                                          "required": [
                                              "startDate",
                                              "endDate"
                                          ]
                                      },
                                      "salePrice": {
                                          "description": "The promotional price for a product. (value or % amount off)",
                                          "type": "object",
                                          "$schema": "http://json-schema.org/draft-04/schema",
                                          "properties": {
                                              "startDate": {
                                                  "description": "The start date following ISO 8601 format.",
                                                  "type": "string",
                                                  "format": "date-time"
                                              },
                                              "endDate": {
                                                  "description": "The end date following ISO 8601 format.",
                                                  "type": "string",
                                                  "format": "date-time"
                                              }
                                          },
                                          "required": [
                                              "startDate",
                                              "endDate"
                                          ]
                                      },
                                      "customAttributes": {
                                          "type": "object",
                                          "patternProperties": {
                                              ".{1,}": {
                                                  "type": "string"
                                              }
                                          }
                                      },
                                      "wholesale": {
                                          "description": "The wholesale price for a given quantity range.",
                                          "type": "object",
                                          "$schema": "http://json-schema.org/draft-04/schema",
                                          "properties": {
                                              "minQuantity": {
                                                  "description": "The minimum quantity range that this price applies to.",
                                                  "type": "number",
                                                  "minimum": 1
                                              },
                                              "maxQuantity": {
                                                  "description": "The maximum quantity range that this price applies to.",
                                                  "type": "number",
                                                  "minimum": 2
                                              }
                                          },
                                          "required": [
                                              "minQuantity"
                                          ]
                                      }
                                  },
                                  "required": [
                                      "effectiveAmount",
                                      "originalAmount",
                                      "currency"
                                  ]
                              }
                          }
                      }
                  }
              }
        headers:
          Warning:
            description: |
              Contains warning code describing what is missing in the response, e.g. "missing_price".
            displayName: Warning
            type: string
      400:
        description: |
          Request syntactically incorrect. Any details will be provided within the response payload.
        body:
          application/json:
            example: |
              {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                      {
                          "field": "Accept-Language",
                          "message": "not a language",
                          "type": "invalid_header"
                      }
                  ]
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      500:
        description: |
          Some server side error occurred. Any details will be provided within the response payload.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      503:
        description: |
          Service temporarily unavailable.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
  /{productId}:
    uriParameters:
      productId:
        type: string
        required: true
    get:
      is: [ localizedRetrieval, oauth2 ]
      description: Get product details including default price and categories.
      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
        Accept-Language:
          type: string
          description: |
            The value of the locale identifier of the language in which the attribute should be returned.
            Provide several values separated by comma, in order to specify fallback languages.

          example: pl
          repeat: true
          required: false
        hybris-languages:
          type: string
          description: |
            Comma separated list of language identifiers for which the localization for an attribute
            should be provided.

          example: en,pl,it
          repeat: true
          required: false
        hybris-currency:
          type: string
          description: |
            currency ISO code

          example: USD
          required: false
      queryParameters:
        effectiveDate:
          type: string
          description: |
            The date in ISO 8601 format to get only the prices which are effective at the specified date.

          example: 2015-01-23T22:00:00+0000
          required: false
      responses:
        200:
          description: |
            Resource successfully retrieved.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Product Details",
                    "type": "object",
                    "properties": {
                        "product": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "Product",
                            "type": "object",
                            "properties": {
                                "metadata": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "mixins": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string",
                                                "format": "uri"
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier"
                                },
                                "code": {
                                    "type": "string",
                                    "description": "Unique, mandatory user-defined identifier of a product.",
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                                },
                                "name": {
                                    "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                                    "description": "The name of the product."
                                },
                                "description": {
                                    "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                                    "description": "The description of the product."
                                },
                                "published": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "This flag determines if product is live."
                                },
                                "media": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Media file metadata",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "yrn": {
                                                "$schema": "http://json-schema.org/draft-04/schema#",
                                                "title": "YRN attribute",
                                                "type": "string",
                                                "format": "URI",
                                                "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                            },
                                            "mediaId": {
                                                "type": "string"
                                            },
                                            "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL of file content",
                                                "required": true
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Media file tags"
                                            },
                                            "contentType": {
                                                "type": "string",
                                                "description": "MIME type of the media file"
                                            },
                                            "stored": {
                                                "type": "boolean",
                                                "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "description": "Date of media metadata creation."
                                            },
                                            "customAttributes": {
                                                "type": "object",
                                                "additionalProperties": true,
                                                "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "description": "Contains media information (including url). This attribute is Read-Only."
                                },
                                "customAttributes": {
                                    "type": "array",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "minLength": 1,
                                                "pattern": "^[a-zA-Z0-9]*$"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "key",
                                            "value"
                                        ]
                                    }
                                },
                                "mixins": {
                                    "type": "object"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name"
                            ]
                        },
                        "prices": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "array",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema",
                                "title": "Price",
                                "type": "object",
                                "properties": {
                                    "priceId": {
                                        "description": "The price identifier.",
                                        "type": "string"
                                    },
                                    "effectiveAmount": {
                                        "description": "The effective amount that must be taken into consideration for calculation purposes.",
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "originalAmount": {
                                        "description": "The original price value for a given product. If salePrice is informed, it will be applied over this amount.",
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "currency": {
                                        "description": "The currency code following the ISO 4217 standard.",
                                        "type": "string",
                                        "pattern": "[A-Z]{3}"
                                    },
                                    "measurementUnit": {
                                        "description": "The measurement unit allows you to specify unit pricing information for a given measure or dimension.",
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema",
                                        "properties": {
                                            "quantity": {
                                                "description": "The unit pricing base measure attribute specifies your preference of the denominator.",
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "unitCode": {
                                                "description": "The unit of measurement",
                                                "enum": [
                                                    "kg",
                                                    "g",
                                                    "mg",
                                                    "l",
                                                    "ml",
                                                    "lb",
                                                    "qt",
                                                    "qtr",
                                                    "gal",
                                                    "pt",
                                                    "oz"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "quantity",
                                            "unitCode"
                                        ]
                                    },
                                    "dateRange": {
                                        "description": "The date range allows you to define pricing for a specific period of time.",
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema",
                                        "properties": {
                                            "startDate": {
                                                "description": "The start date following ISO 8601 format.",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "endDate": {
                                                "description": "The end date following ISO 8601 format.",
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "required": [
                                            "startDate",
                                            "endDate"
                                        ]
                                    },
                                    "salePrice": {
                                        "description": "The promotional price for a product. (value or % amount off)",
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema",
                                        "properties": {
                                            "startDate": {
                                                "description": "The start date following ISO 8601 format.",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "endDate": {
                                                "description": "The end date following ISO 8601 format.",
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "required": [
                                            "startDate",
                                            "endDate"
                                        ]
                                    },
                                    "customAttributes": {
                                        "type": "object",
                                        "patternProperties": {
                                            ".{1,}": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "wholesale": {
                                        "description": "The wholesale price for a given quantity range.",
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema",
                                        "properties": {
                                            "minQuantity": {
                                                "description": "The minimum quantity range that this price applies to.",
                                                "type": "number",
                                                "minimum": 1
                                            },
                                            "maxQuantity": {
                                                "description": "The maximum quantity range that this price applies to.",
                                                "type": "number",
                                                "minimum": 2
                                            }
                                        },
                                        "required": [
                                            "minQuantity"
                                        ]
                                    }
                                },
                                "required": [
                                    "effectiveAmount",
                                    "originalAmount",
                                    "currency"
                                ]
                            }
                        },
                        "categories": {
                            "type": "array",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema",
                                "title": "Category",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
        203:
          description: |
            If the response is incomplete (e.g. when the price information could not be returned due to overload or technical problems).

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Product Details",
                    "type": "object",
                    "properties": {
                        "product": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "Product",
                            "type": "object",
                            "properties": {
                                "metadata": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "mixins": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string",
                                                "format": "uri"
                                            }
                                        }
                                    }
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique identifier"
                                },
                                "code": {
                                    "type": "string",
                                    "description": "Unique, mandatory user-defined identifier of a product.",
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\/\\-\\s_*]*$"
                                },
                                "name": {
                                    "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                                    "description": "The name of the product."
                                },
                                "description": {
                                    "$ref": "https://api.yaas.io/patterns/v1/schema-localized.json",
                                    "description": "The description of the product."
                                },
                                "published": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "This flag determines if product is live."
                                },
                                "media": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Media file metadata",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "yrn": {
                                                "$schema": "http://json-schema.org/draft-04/schema#",
                                                "title": "YRN attribute",
                                                "type": "string",
                                                "format": "URI",
                                                "description": "Contains the YaaS Resource Name (YRN) of a specific resource on base of the 'yaas' URN scheme"
                                            },
                                            "mediaId": {
                                                "type": "string"
                                            },
                                            "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL of file content",
                                                "required": true
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "description": "Media file tags"
                                            },
                                            "contentType": {
                                                "type": "string",
                                                "description": "MIME type of the media file"
                                            },
                                            "stored": {
                                                "type": "boolean",
                                                "description": "If true, the media file is stored in the service. Otherwise the service only stores external URL of the file and metadata."
                                            },
                                            "createdAt": {
                                                "type": "string",
                                                "description": "Date of media metadata creation."
                                            },
                                            "customAttributes": {
                                                "type": "object",
                                                "additionalProperties": true,
                                                "description": "Map of custom attributes. The map key should is a string, the value can be any JSON object"
                                            }
                                        },
                                        "additionalProperties": false
                                    },
                                    "description": "Contains media information (including url). This attribute is Read-Only."
                                },
                                "customAttributes": {
                                    "type": "array",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string",
                                                "minLength": 1,
                                                "pattern": "^[a-zA-Z0-9]*$"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "key",
                                            "value"
                                        ]
                                    }
                                },
                                "mixins": {
                                    "type": "object"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name"
                            ]
                        },
                        "prices": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "array",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema",
                                "title": "Price",
                                "type": "object",
                                "properties": {
                                    "priceId": {
                                        "description": "The price identifier.",
                                        "type": "string"
                                    },
                                    "effectiveAmount": {
                                        "description": "The effective amount that must be taken into consideration for calculation purposes.",
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "originalAmount": {
                                        "description": "The original price value for a given product. If salePrice is informed, it will be applied over this amount.",
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "currency": {
                                        "description": "The currency code following the ISO 4217 standard.",
                                        "type": "string",
                                        "pattern": "[A-Z]{3}"
                                    },
                                    "measurementUnit": {
                                        "description": "The measurement unit allows you to specify unit pricing information for a given measure or dimension.",
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema",
                                        "properties": {
                                            "quantity": {
                                                "description": "The unit pricing base measure attribute specifies your preference of the denominator.",
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "unitCode": {
                                                "description": "The unit of measurement",
                                                "enum": [
                                                    "kg",
                                                    "g",
                                                    "mg",
                                                    "l",
                                                    "ml",
                                                    "lb",
                                                    "qt",
                                                    "qtr",
                                                    "gal",
                                                    "pt",
                                                    "oz"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "quantity",
                                            "unitCode"
                                        ]
                                    },
                                    "dateRange": {
                                        "description": "The date range allows you to define pricing for a specific period of time.",
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema",
                                        "properties": {
                                            "startDate": {
                                                "description": "The start date following ISO 8601 format.",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "endDate": {
                                                "description": "The end date following ISO 8601 format.",
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "required": [
                                            "startDate",
                                            "endDate"
                                        ]
                                    },
                                    "salePrice": {
                                        "description": "The promotional price for a product. (value or % amount off)",
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema",
                                        "properties": {
                                            "startDate": {
                                                "description": "The start date following ISO 8601 format.",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "endDate": {
                                                "description": "The end date following ISO 8601 format.",
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "required": [
                                            "startDate",
                                            "endDate"
                                        ]
                                    },
                                    "customAttributes": {
                                        "type": "object",
                                        "patternProperties": {
                                            ".{1,}": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "wholesale": {
                                        "description": "The wholesale price for a given quantity range.",
                                        "type": "object",
                                        "$schema": "http://json-schema.org/draft-04/schema",
                                        "properties": {
                                            "minQuantity": {
                                                "description": "The minimum quantity range that this price applies to.",
                                                "type": "number",
                                                "minimum": 1
                                            },
                                            "maxQuantity": {
                                                "description": "The maximum quantity range that this price applies to.",
                                                "type": "number",
                                                "minimum": 2
                                            }
                                        },
                                        "required": [
                                            "minQuantity"
                                        ]
                                    }
                                },
                                "required": [
                                    "effectiveAmount",
                                    "originalAmount",
                                    "currency"
                                ]
                            }
                        },
                        "categories": {
                            "type": "array",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema",
                                "title": "Category",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
          headers:
            Warning:
              description: |
                Contains warning code describing what is missing in the response, e.g. "missing_price".
              displayName: Warning
              type: string
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "Accept-Language",
                            "message": "not a language",
                            "type": "invalid_header"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          description: |
            If user is not authorized to perform the operation. (empty/incorrect hybris-roles).

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        404:
          description: |
            If the specified product sku does not exist or is not published.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        500:
          description: |
            Some server side error occurred. Any details will be provided within the response payload.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        503:
          description: |
            Service temporarily unavailable.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }